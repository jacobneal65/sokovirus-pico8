pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--init & stargame

--sprite flags
--0:wall
--1:

--to blank desktop (102*8,16*8)

function _init()
	t=0
	fadeperc=1
	debug={}
	cam_x,cam_y=0,0
	p_x,p_y=22,10
	level=1
	servertext={"server 1","server 2","server 3"}
	--normal,squish up,squish right
	p_anims={107,117,122}
	
	p_ani=p_anims[1]
	--camera pos per lvl
	levelx={17,34,51,68,85,102,0,17,34,51,68,85,102}
	levely={0,0,0,0,0,0,16,16,16,16,16,16,16}

	--player pos per lvl
	plx={19,37,59,71,87,106,6,0,0,0,0,0}
	ply={9,10,12,8,10,9,25,0,0,0,0,0}
	
	hubtext = {
		{">password: **********",
		">ipscan 132.55.23.1.8080",
		">select a server to begin"},
		{">message from employer:",
		">server 1 destroyed",
		">two more to go. . ."},
		{">message from employer:",
		">server 2 destroyed",
		">two more to go. . ."},
		{">message from employer:",
		">server 3 destroyed",
		">two more to go. . ."},
		{">message from employer:",
		">complete the last job.",
		">your pay will be $_,___."},
	}
	notrestart=true--skip check solved if restart
	--player location given the level

	boxtles={6,7,8,9}
	goaltles={22,23,24,25}

	dpal={0,1,1,2,1,13,6,4,4,9,3,13,1,13,14}

	dirx={-1,1,0,0,1,1,-1,-1}
	diry={0,0,-1,1,-1,1,1,-1}
	
	box={}
	goal={}
	lock={0,0,0}--keeps track of lock animations

	completedworlds={0,0,0}

	worldlevels=4--SIZE of LOCK+GOAL
	
	slbx=nil --SLIDE BOX
	
	--particles
	part={}
	
	--scanline stuff
	showscan=true
	yscan=38
	yscanstart=38
	yscanend=120 -- -42+1
	
	init_menu()
	
end

function init_level()
	yscan=yscanstart
	goal={}
	box={}
	buttbuff=-1	
	p_ox,p_oy=0,0--PLAYER OFFSET
	--OFFSET ALLOWS PLAYER TO SLIDE
	--INTO A GIVEN SPOT WITHOUT
	--LOSING POSITION		
	p_flp=false
	p_mov=nil
	p_t=0--ANIMATION TIMER (0 TO 1)
	_upd=upd_level
	_drw=drw_level
	--music(32,1000)
end
-->8
--update

function _update()
	t+=1--where we are in the anim
	_upd()
	--update particles
	updateparts()
end 

function upd_game()

	btn_buffer()
	do_btn_buffer(buttbuff)
	buttbuff=-1

	if notrestart then
		if checksolved() then
			--end of world
			if level%worldlevels == 0 then
				--end of world
				if level<5 then
					completedworlds[1]=1
					init_hub()
				elseif level<9 then
					completedworlds[2]=1
					init_hub()
				else
					completedworlds[3]=1
					init_hub()
				end
			else
				level+=1
				_upd=upd_level
			end		
			fadeout(0.5)
			--sfx(54)
		end
	else
		notrestart=true
	end
end

-->8
--draw

--WORKS FOR 2x2 AND SINGLE FRAME ANIMS
function create_ani_list(_sa,_ea,_delay,grid)
	local _ani={}
	--add delay
	if _delay>0 then
		for x=0,_delay do
			add(_ani,_sa)
		end
	end
	--add normal frames

	local length=_ea
	local skip=0
	if grid then
		length=(_ea-_sa)/2+_sa
	end
	for x=_sa,length do
		add(_ani,x+skip)
		if grid then
			skip+=1
		end
	end
	return _ani
end

function add_ani(_sa,_ea,_delay,_spd,_x,_y,_flp)
	local _ani = create_ani_list(_sa,_ea,_delay,false)
	local a={
		ani=_ani,
		spd=_spd,--SPD OF ANI LOWER BETTER?
		x=_x,
		y=_y,
		flp=_flp
	}
	add(anims,a)
end



function draw_bas_ani()
	for a in all(anims) do
		fm=getframe(a.ani,a.spd)
		drawspr(fm,a.x,a.y,a.flp)
	end
end

--ONLY ADD 2x2 ANIMATED GRIDS
function add_grid(_sa,_ea,_delay,_spd,_x,_y,_w,_h)
	
	local _ani=create_ani_list(_sa,_ea,_delay,true)
	
	local a={
		ani=_ani,
		spd=_spd,
		x=_x,
		y=_y,
		w=_w,
		h=_h

	}
	add(grids,a)
end

function drawgrids()
	for g in all(grids) do
		--SINCE LOOP STARTS AT 0
		gw,gh=g.w-1, g.h-1	
		for x=0,gw do
			for y=0,gh do
				sp=getframe(g.ani,g.spd)
				drawspr(y*16+sp+x,g.x+x*8,g.y+y*8,false)
			end
		end
	end
end

function sdrawgrid(stspr,_x,_y,_w,_h)
	_w,_h=_w-1,_h-1--since start 0	
	for x=0,_w do
		for y=0,_h do		
			drawspr(y*16+stspr+x,_x+x*8,_y+y*8,false)
		end
	end
end

function getframe(ani,spd)
	return ani[flr(t/spd)%#ani+1]
end

function drawspr(_spr,_x,_y,_flp)
	spr(_spr,_x,_y,1,1,_flp)	
end

function drawgamestuff()
	--(sa,ea,delay,spd,x,y,flp)
	--draw player
	add_ani(p_ani,p_ani+3,4,4,p_x*8+p_ox,p_y*8+p_oy,p_flp)
	--monitor
	add_ani(96,98,0,6,cam_x+3*8,cam_y+1*8,false)
	--chord
	add_ani(99,102,4,4,cam_x+4*8,cam_y+1*8,false)
	--coin
	add_grid(37,43,4,4,16*3+cam_x+5*8,cam_y+1*8,2,2)
	--draw desk
	sdrawgrid(45,cam_x+2*8,cam_y+1*8,3,2)
	--lower bar
	for x=0,15 do
		drawspr(32,cam_x+x*8,cam_y+24,false)
	end
	--particles
	drawparts()
	
	draw_bas_ani()
	drawgrids()
	drawlock()
end

function drawbox(b)
 	drawspr(b.tle,b.x*8+b.ox,b.y*8+b.oy,false)
end

function drawlock()
	for i=1,worldlevels-1 do
		local _spr
		if lock[i]==1 then
			_spr=70
		else
			_spr=64
		end
		sdrawgrid(_spr,16*(i-1)+cam_x+5*8,cam_y+1*8,2,2)
	end
		
end

function _draw()
	grids={}
	anims={}
	_drw()
	checkfade()
	--draw debug
	local offst=0
	for txt in all(debug) do
		print(txt,cam_x+90,cam_y+offst,8)
		offst+=8
	end
end

function drw_level()
	cls()
	--CHANGE TRANSPARENCY COLR
	palt(0,false)
	palt(14,true)
	map()
	
	for b in all(box) do
		drawbox(b)
	end
	--draw everything else in the game
	drawgamestuff()
	drawlvltitle()
 	--RETURN TRANSPARENCY COLR
	palt(0,true)
	palt(14,false)
	draw_scanline()
end
function drawlvltitle()
	print("level: "..level,cam_x+49,cam_y+1,3)
end

--tool

function oprint8(_t,_x,_y,_c,_c2)
	for i=1,8 do
		print(_t,_x+dirx[i],_y+diry[i],_c2)		
	end
	print(_t,_x,_y,_c)
end

function rectfill2(_x,_y,_w,_h,_c)
	--★
	rectfill(_x,_y,_x+max(_w-1,0),_y+max(_h-1,0),_c)
end


function wait(_wait)
 repeat
		_wait-=1
		flip()
	until _wait<0
end
-->8
--gameplay

function moveplayer(dx,dy)--direction x and y are either 0, 1, or -1
	local newpx=p_x+dx
	local newpy=p_y+dy	
	
	--removed p_flip stuff

	--planned tile to move to
	local tle=mget(newpx,newpy)
	--checkbox
	p_wall=false--used to change animations
	local bx = checkbox(newpx,newpy)
	--wall or box flag
	if fget(tle,0) or bx then
		p_sox=dx*8
		p_soy=dy*8
		p_ox,p_oy=0,0		
		p_mov=pbump--set to bump
		--box flag
		if bx then
			slbx=bx
			bx.dx=dx
			bx.dy=dy
		else
			sfx(56)
		end
		p_wall=true
	else
		--no wall or box
		sfx(63)
		
		p_x+=dx
		p_y+=dy
		
		--SET OFFSET USED IN player loop
		p_sox=-dx*8
		p_soy=-dy*8
		
		p_ox,p_oy=p_sox,p_soy
		p_mov=pslide--set to slide into place
	end
	_upd=upd_p_loop--set player loop
	p_t=0
	
	
	
end

--this pauses player movement
--to animate
function upd_p_loop()
	btn_buffer()

	--wall animations
	if p_sox==0 then
		if p_wall then
			p_ani=p_anims[3]--bump wall
		else
			p_ani=p_anims[2]--squish up
		end
	else
		if p_wall then
			p_ani=p_anims[2]--squish left
		else
			p_ani=p_anims[3]--squish left
		end
	end
	p_t=min(p_t+0.3,1)

	p_mov() --moves the player offset by
	--trail particle
	particletrail(p_x*8+p_ox,p_y*8+p_oy)
	if p_t==1 then
		--call slide box
		p_ani=p_anims[1]--normal
		_upd=upd_game
		if slbx then
			movebox()
		end
	end
end

function pslide()
	p_ox=p_sox*(1-p_t)
	p_oy=p_soy*(1-p_t)
end

function pbump()
	local tme=p_t
	--go back the second half of the animation
	if p_t>0.5 then
		tme=1-p_t
	end
		p_ox=p_sox*tme
		p_oy=p_soy*tme
end

function btn_buffer()
	if buttbuff==-1 then
		buttbuff=getinput()
	end
end

function getinput()
	for i=0,5 do
		if btnp(i) then
			return i
		end
	end 
	return -1
end

function do_btn_buffer(_btn)
	if 0<=_btn and _btn<4 then
		moveplayer(dirx[_btn+1],diry[_btn+1])	
	end
 	if _btn==5 then--x key
		restartlevel()
 	end
end

function restartlevel()
	particleshatter(p_x*8,p_y*8)
	--fadeout(1)
	init_codeslide()
	notrestart=false
	
end

function init_codeslide()
	--set the offset counter
	p_sox=(p_x-plx[level])*8--used to set p_ox (starting offset)
	p_soy=(p_y-ply[level])*8--used to set p_oy
	--set player to starting location
	p_x=plx[level]
	p_y=ply[level]
	p_ox,p_oy=p_sox,p_soy
	p_mov=pslide
	_upd=upd_codeslide--set player loop
	p_t=0
end

function upd_codeslide()
	btn_buffer()
	p_t=min(p_t+0.1,1)
	p_ani=72
	p_mov() --moves the player offset by
	--trail particle
	particlecode(p_x*8+p_ox,p_y*8+p_oy)
	if p_t==1 then
		--call slide box
		p_ani=p_anims[1]--normal
		_upd=upd_game
		init_level()
		reload(0x1000, 0x1000, 0x2000)
	end
end

function checksolved()
	local solved = true	
	for g in all(goal) do
		if checkbox(g.x,g.y) then
			mset(g.x,g.y,13)
			if not g.flg then
				g.flg = true
				sfx(55)
				particleshatter(g.x*8,g.y*8)
  			end
		else
			mset(g.x,g.y,g.gf)
			g.flg=false
			solved = false
		end
	end
	return solved
end

function upd_level()
	
	modlvl=level%worldlevels
	
	local lx=levelx[level]
	local ly=levely[level]
	
	cam_x=8*lx
	cam_y=8*ly
	camera(cam_x,cam_y)--pixel location
	--player stuff
	if plx[level]+ply[level]>0 then
		p_x=plx[level]
		p_y=ply[level]
	else
		p_x=lx+1
		p_y=ly+5
	end

	--lock stuff
	if modlvl==0 then
		lock={}
	else
		lock[modlvl-1]=1
	end

	--INITIALIZE BOX AND GOAL
	box={}
	goal={}
	--LOAD UP THE BOXES AND GOALS
	for x=lx,lx+15 do
		for y=ly,ly+15 do
			tle=mget(x,y)
			--ALL THE BOX TYPES
			for t in all(boxtles) do
				if t==tle then
					addbox(tle,x,y)
					mset(x,y,0)--SET GROUND TYLE
				end
			end
			--ALL THE GOAL TYPES
			for t in all(goaltles) do
				if t==tle then
					addgoal(tle,x,y)
				end
			end
		end
	end
		--set the state for the game
	_upd=upd_game 
	_drw=drw_level
	
end
-->8
--ui and juice
function draw_scanline()
	--(_x,_y,_w,_h,_c)
	if showscan then
		rectfill2(cam_x+6,cam_y+yscan,116,1,3)

		showscan = false
	else
		showscan = true
		if yscan >= yscanend then
			yscan = yscanstart
		else
			yscan+=1
		end
		showscan=true
	end
end

function dofade()
 local p,kmax,col,k=flr(mid(0,fadeperc,1)*100)
 for j=1,15 do
  col = j
  kmax=flr((p+j*1.46)/22)
  for k=1,kmax do
   col=dpal[col]
  end
  pal(j,col,1)
 end
end


function fadeout(spd,_wait)
 if (spd==nil) spd=0.04
 if (_wait==nil) _wait=0
 repeat
  fadeperc=min(fadeperc+spd,1)
  dofade()
  flip()
 until fadeperc==1
 wait(_wait)
end

function checkfade()
	if fadeperc>0 then
		fadeperc=max(fadeperc-0.04,0)
		dofade()
	end
end


--menu
--(will move to ui when done)

function init_menu()
	frame=0
	msg={
		lines={},
		pos=0,
		rate=2,
		len=0
	     }
	     
	lines={
		"----------------------",
		">message from employer:",
		">your mission is the",
		">following,",
		">1) load user 42.42.10",
		">2) execute server scan",
		">3) break their ice",
		">3) delete all files",
		" .  .  .",
		">failure is not an option.",
	     }
	setmsg(lines)
	
	wnd={l=10,t=10}     

	_upd=upd_menu
	_drw=drw_menu
end

function updatemessage()
	if (frame%msg.rate==0) then
		msg.pos+=1
	end   
	frame+=1
end

function upd_menu()
	updatemessage()
	if btnp(❎) then
		sfx(47)
		fadeout()
		init_hub()
		
	end
end

function drw_menu()
	cls()
	drawmessage()
	oprint8("press ❎ to start",30,80+sin(time()),7,13)

end

function drawmessage()
	offset=0
	y=0

	if(frame%msg.rate==0 and msg.pos<msg.len) then
		if sfx1 then
			sfx(50)
		else
			sfx1=true
		end
	end
	for l in all(msg.lines) do
		off=msg.pos-offset
		if (off<0) then
			break
		end

		linepos=min(#l,off)
		if l[linepos]==" " then
			sfx1=false
		end
		out=sub(l,0,linepos)
		print(out,wnd.l+5,wnd.t+y+5,3)
		offset+=#l
		y+=6
	end
end

function setmsg(lines)
	msg.lines=lines
	msg.pos=0
	msg.len=0
	sfx1=false
	for l in all(lines) do
	 msg.len+=#l
	end
end

--hub

function sethubtext()
	local c = completedworlds
	if cmplist(c,{0,0,0}) then
		return hubtext[1]
	elseif cmplist(c,{1,0,0}) then
		return hubtext[2]
	elseif cmplist(c,{0,1,0}) then
		return hubtext[3]
	elseif cmplist(c,{0,0,1}) then
		return hubtext[4]
	elseif c[1]+c[2]+c[3]>1 then
		return hubtext[5]
	end


	return ""
end

function cmplist(_a,_b)
	for i=1,#_a do
		if _a[i]!=_b[i] then
			return false
		end
	end
	return true
end


function init_hub()
	cam_x,cam_y=0,0
	camera(0,0)
	hubsel=0
	msg={
		lines={},
		pos=0,
		rate=2,
		len=0
	     }
	wnd={l=9,t=40}        
	lines=sethubtext()

	setmsg(lines)
	--music(32,1000)
	_upd=upd_hub
	_drw=drw_hub
end

function upd_hub()
	updatemessage()
	hubinput()
end

function hubinput()
	debug[1]=hubsel
	local _btn=getinput()
	if _btn==⬆️ then	--up
		hubsel=(hubsel-1)%3
		sfx(52)
	elseif _btn==⬇️ then--down
		hubsel=(hubsel+1)%3
		sfx(52)
	elseif _btn==5 then
		if completedworlds[hubsel+1]==1 then
			sfx(58)
		else
			sfx(51)
			level=hubsel*4+1
			level=7-- (used for debuging)
			selworld()
		end
	end
end

function selworld()
	--worlds: 1-5
	init_level()
	fadeout()
end
function drw_hub()
	cls()
	map()
	--sa,ea,delay,spd
	--draw coin
	--add_grid(37,43,4,4,16*3+cam_x+5*8,cam_y+1*8,2,2)
	--draw rectangle
	add_ani(2,3,3,10, 8,8*(10+2*(hubsel)), false)
	drawmessage()
	for i=1,3 do
		local t =""
		local colr=3
		local ys=8*(10+2*(i-1))
		if i==(hubsel+1) then
			colr=11
			rectfill2(26,ys,80,7,3)
		end
		if completedworlds[i]==1 then
			line(8*2,ys,8*3-1,ys+7,8)
			line(8*3-1,ys,8*2,ys+7,8)
			colr=5
			t=" [error 404]"
		end
		print(servertext[i]..t,26,ys+1,colr)
		local colr=3
	end
	draw_bas_ani()
	drawgrids()
	draw_scanline()
end

-->8
--box and goal

--goal
function addgoal(tle,gx,gy) 
	local g={
		gf=tle,--tile normally
		x=gx,
		y=gy,
		flg=false
	}
	add(goal,g)
end

--box movement
function addbox(btle,bx,by) 
	local b={
		x=bx,
		y=by,
		ox=0,
		oy=0,
		tle=btle
	}
	add(box,b)
end

function checkbox(x,y)
	for b in all(box) do
 	if b.x==x and b.y==y then
 		return b
 	end
 end
 return false--NO BOX FOUND
end

function movebox()
	pushto=mget(slbx.x+slbx.dx,slbx.y+slbx.dy)
	--IF WALL
	slbx.mov = boxslide
	if fget(pushto,0) or checkbox(slbx.x+slbx.dx,slbx.y+slbx.dy) then
		sfx(56)
		slbx.mov=boxbump
		slbx.sox=slbx.dx*8
		slbx.soy=slbx.dy*8
		slbx.ox,slbx.oy=0,0
	else
		--PUSH BLOCK	
		slbx.x+=slbx.dx--SET NEW DESTINATION
		slbx.y+=slbx.dy
		slbx.sox=-slbx.dx*8--STARTING OFFSET
		slbx.soy=-slbx.dy*8
		slbx.ox,slbx.oy=slbx.sox,slbx.soy
		sfx(58)
	end
	p_t=0
	_upd=upd_box_loop
end

--LOOP UNTIL BOX FINISHES MOVING
function upd_box_loop()
	btn_buffer()
	p_t=min(p_t+.4,1)
	slbx.mov(p_t)
	particletrail(
	slbx.x*8+slbx.ox+4,
	slbx.y*8+slbx.oy+4)
	
	if p_t==1 then
		_upd=upd_game
		slbx=nil
	end
end

function boxslide(p_t)
	slbx.ox=slbx.sox*(1-p_t)
	slbx.oy=slbx.soy*(1-p_t)	
end

function boxbump(p_t)
	local tme=p_t
	--go back the second half of the animation
	if tme>0.5 then
		tme=1-p_t
	end
	slbx.ox=slbx.sox*tme
	slbx.oy=slbx.soy*tme
end

-->8

-->8
--particles

-- add a particle
function addpart(_x,_y,_dx,_dy,_type,_maxage,_col)
	local _p = {}
	_p.x=_x
	_p.y=_y
	_p.dx=_dx
	_p.dy=_dy
	_p.typ=_type
	_p.mage=_maxage
	_p.age=0
	_p.col=0--also sprite val
	_p.color_array=_col

	add(part,_p)
end
--4:19
-- spawn a trail
function particletrail(_x,_y)
	if rnd()<0.5 then
		local _ang=rnd()
		local _ox=sin(_ang)*2*.6
		local _oy=cos(_ang)*2*.6
		addpart(
			_x+_ox+4,
			_y+_oy+4,
			0,--dx
			0,--dy
			0,--type
			15+rnd(10),
			{11,3,1}
		)
	end
end

function particlecode(_x,_y)
	for i=1,10 do
		local _ang=rnd()
		local _ox=sin(_ang)*2*.6
		local _oy=cos(_ang)*2*.6
		addpart(
			_x+_ox+4,
			_y+_oy+4,
			0,--dx
			0,--dy
			1,--type
			20,--age
			{7,11,3}
		)
	end

end


--place brick in slot
function particleshatter(x,y)
	for i=0,10 do
		local _ang=rnd()
		local _dx=sin(_ang)*1
		local _dy=cos(_ang)*1
		addpart(
			x+4,
			y+4,
			_dx,
			_dy,
			1,--type
			15,
			{11}--,3,1}
		)
	end

end


function updateparts()
	local _p
	for i=#part,1,-1 do
		_p=part[i]
		_p.age+=1
		local agperc=_p.age/_p.mage
		if _p.age > _p.mage then
			del(part,part[i])
		--if the particle is halfage,
		--change col to old col
		else
		 -- change colors
			if #_p.color_array==1 then
				_p.col = _p.color_array[1]
			end
			--AGPERC 0->1
			--FLR(PERCENT*#ARRAY)
			-- = THE INDEX OF THE COLOR
			local _ci =1+flr(agperc*#_p.color_array)
			_p.col = _p.color_array[_ci]
		end
		
		--apply gravity to shatter
		if _p.typ == 1 then
		--	_p.dy+=0.1
		end
		
		--move particle
		_p.x+=_p.dx
		_p.y+=_p.dy
	end
end

function drawparts()
	for i=1,#part do
		_p=part[i]
		-- pixel particle
		if _p.typ == 0 or _p.typ == 1 then
			pset(_p.x,_p.y,_p.col)
		end
	end
end

__gfx__
000000000000000000000000000000000000000001000010eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee4ee4eeeeee3bbbbbb3eeeeeeee00000000
000000000000000000003000000000000666666001000010e55555eeee6ee6eee656565eeeddddeee3eeee3eee5554ee4e4eeeeeb3bbbb3beeeeeeee00000000
007007000000000000000300000000000633336001000010e522225ee555555ee777775eed1111deeebbbbeee555450ee49eeeeebb3bb3bbee5555ee00000000
000770000000000000000030000000000633336001000010e522225ee522225ee7ddd75eed1dd1dee333333ee555550eeee9eeeebbb33bbbe586685e00000000
000770000000000000000300000000000666b86001055010e555555ee544445ee777775eed1dd1dee3bbbb3ee555550eeeee9eeebbb33bbbe565565e00000000
007007000005000000003000000000000665566005666650e599995ee555555ee7ddd75eed1111de3b3333b3e555550eeeeae9eebb3bb3bbe565565e00000000
00000000000000000000000000000000066666600566b850e5aaaa5eee6ee6eee77777eeeeddddee33eeee33ee0000eeeeeeae9eb3bbbb3b55e55e5500000000
000000000000000000000000000000000555555005555550eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee33ee33eeeeeeeeeeeeeeae93bbbbbb35e5ee5e500000000
111111505505555500000000000000000000000006666660e464464ee444444e65555556eeeeedddee3133eeeeeeeeee55555550333333331111111100000000
11111150dd0ddddd00000000000000000000000006bbbb60464444644444444466666666eeeeed8deb13313eee5555ee66666660333333331d0dddd100000000
111111500000000000666666666666666666660006bbbb60464444644644446466c6cc66dddddddde133133ee559955e66555660333333331000000100000000
111111505555055500666666666666666666660006bbbb6044644644445555446c6666c6d555555deb11331e599aa99505050500333333331555055100000000
11111150dddd0ddd0066666666666666666666000dddddd044644644445555446c6666c6dddddddde133313e5aaaaaa555666550333333331ddd0dd100000000
111111500000000000666555555555555556660006666660446446444644446466cc6c66eeeeeeeeeb33133e5999999566666660333333331000000100000000
555555505505555500666500000000000056660006555560455555544444444466666666eeeeeeeeeb31331e5aaaaaa555555550333333331505555100000000
00000000dd0ddddd00666500000000000056660006666660e555555ee444444ee666666eeeeeeeeeee1bb1ee5555555500000000333333331111111100000000
55555555000000000066650000000000005666000000066666000000000000060000000000000006000000000000000600000000eeeeeeeeeeeeeeeeeeeeeeee
11111111000000000066650000000000005666000006655555660000000000656000000000000066600000000000006560000000eeeeeeeeeeeeeeeeeeeeeeee
111111110000000000666500000000000056660000655ddddd5560000000065d6600000000000066600000000000066d56000000eeeeeeeeeeeeeeeeeeeeeeee
1111111100000000006665000000000000566600065dddd6dddd5600000065ddd66000000000006660000000000066ddd56000004eeeeeeeeeeeeeeeeeeeeeee
1111111100000000006665000000000000566600065ddd6d6ddd5600000065ddd66000000000006660000000000066ddd56000004eeeeeeeeeeeeeeeeeeeeeee
111111110000000000666500033333300056660065ddd6ddd6ddd56000065dd6dd660000000000660000000000066dd6dd5600004eeeeeeeeeeeeeeeeeeeeeee
111111110000000000666500000000000056660065ddd66dd6ddd56000065dd6dd660000000000660000000000066dd6dd56000054eeeeeeeeeeeeeeeeeeeeee
555555550000000000666500000000000056660065ddd666d6ddd56000065dd6dd660000000000660000000000066dd6dd56000054eeeeeeeeeeeeeeeeeeeeee
000000005555555000666500000000000056660065ddd666d6ddd56000065dd6dd660000000000660000000000066dd6dd56000054eeeeee666ddddddddddddd
000000006655566000666555555555555556660065ddd6ddd6ddd56000065dd6dd660000000000060000000000066dd6dd560000e54eeeeedddddd555555555d
0000000000050000006666666666666666666600065ddd6d6ddd5600000065ddd66000000000000660000000000066ddd5600000e544444e55555deeeeeeee5d
0000000000000000006666666666666666666600065dddd6dddd5600000065ddd66000000000000660000000000066ddd5600000e545554eeeee5deeeeeeee5d
000000000500050000666666666666666666660000655ddddd5560000000065d6600000000000066600000000000066d56000000e45eeee4eeee5deeeeeeee5d
00000000556665500066666666666666666666000006655555660000000000666000000000000066600000000000006660000000e45eeee4eeee5deeeeeeee5d
0000000055555550006666666666666666666600000006666600000000000006000000000000000600000000000000060000000045eeeeee4eee5deeeeeeee5d
0000000000000000006666666666666666666600000000000000000000000000000000000000000000000000000000000000000045eeeeee4eee5deeeeeeee5d
e55555555555555ee56666666666665ee56666666666665ee55555555555555e0000000000000000000000000000000000000000000000000000000000000000
e59999999999995ee56666666666665ee56666666666665ee53333333333335e0000000000000000000077000000000000000000000000000000000000000000
e59999999999995ee56666666666665ee56666666666665ee53333333333335e0000700000700000000777000070000000000000000000000000000000000000
e59999999999995ee56666666666665ee56666666666665ee55335555553355e0007770000777000007777000077777000000000000000000000000000000000
e59999999999995ee56666666666665ee55665555556655eee5335eeee5335ee0007700000777700000770000007770000000000000000000000000000000000
e59999999999995ee55665555556655eee5665eeee5665eeee5555eeee5555ee0000000000077700000000000000700000000000000000000000000000000000
e55995555559955eee5665eeee5665eeee5555eeee5555eeeeeeeeeeeeeeeeee0000000000007000000000000000000000000000000000000000000000000000
ee599559955995eeee555555555555eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000
e55555599555555eeeeeee5665eeeeeeeeeeee5555eeeeeeeeeeeeeeeeeeeeee000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000
e59999999999995ee55555566555555eeeeeee5665eeeeeeeeeeee5555eeeeee000000000000000000000000e0bbbbeee0bbbbeee03333eee0bbbbee00000000
e59999999999995ee56666666666665ee55555566555555eeeeeee5335eeeeee0000000000000000000000000333333e0bbbbbbe0bbbbbbe0333333e00000000
e59999999999995ee56666666666665ee56666666666665ee55555533555555e0000000000000000000000000bbbbbbe0333333e0bbbbbbe0bbbbbbe00000000
e59999999999995ee56666666666665ee56666666666665ee53333333333335e000000000000000000000000e0bbbbeee0bbbbeee03333eee0bbbbee00000000
e59999999999995ee56666666666665ee56666666666665ee53333333333335e0000000000000000000000000333331e0bbbbb1e01bbbbbe0133333e00000000
e55555555555555ee55555555555555ee55555555555555ee55555555555555e00000000000000000000000001bbbbee013333eee0bbbb1ee0bbbb1e00000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000e0000beee0000beee03000eee0b000ee00000000
eeee555eeeee555eeeee555eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000033330000333300003333000033330000000000
eeeeb555eeeeb555eeee3555eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000b0300000b0300000b0300000b030000000000
eee3b565eeeb3565eeebb5655eeeeeee5eeeeeee5eeeeeee5eeeeeee0000000000000000000000000000000000bbb30000bbb30000bbb30000bbb30000000000
eeeb3566eeebb566eee3b5665eeeeeee5eeeeeee5eeeeeee5eeeeeee000000000000000000000000000000000000000000000000000000000000000000000000
eeebb566eee3b566eeeb356655eeeeee55eeeeee55eeeeee55eeeeee0000000000000000000000000000000000bbbb0000bbbb000bbbbbb00bbbbbb000000000
eee3b566eeeb3566eeebb56665ee55ee65ee55ee65eeccee65ee55ee000000000000000000000000000000000b0000b00b0000b0b000000bb000000b00000000
eeee3566eeeeb566eeeeb56665e5ee5e65ecee5e65e5ee5e65e5eece00000000000000000000000000000000b0bbbb0bb0bbbb0b00bbbb0000bbbb0000000000
eeee5555eeee5555eeee5555555eeee555ceeee5555eeee5555eeeec0000000000000000000000000000000000b00b0000b00b0000b00b0000b00b0000000000
ee1eeeeeee1eeeeeee1eeeeeee1eeeeeee7eeeeeeee1eeeeeee1eeeeeee1eeeeeee1eeeeeee7eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000
e161eeeee761eeeee161eeeee167eeeee767eeeeee16eeeeee76eeeeee16eeeeee16eeeeee76eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000
e1661eeee7661eeee1661eeee1667eeee7661eeeee16eeeeee76eeeeee16eeeeee16eeeeee76eeeeee1eeeeeee1eeeeeee1eeeeeee1eeeeeee7eeeee00000000
e16661eee76661eee16661eee16667eee76661eeee161eeeee761eeeee161eeeee167eeeee761eeee161eeeee761eeeee161eeeee161eeeee167eeee00000000
e166661ee766661ee166661ee166667ee166661eee1661eeee7661eeee1661eeee1667eeee1661eee166661ee766661ee166661ee166667ee166661e00000000
e16611eee76611eee76677eee16617eee16611eeee161eeeee761eeeee767eeeee167eeeee161eeeee1161eeee1161eeee7761eeee1167eeee1161ee00000000
ee1161eeee1161eeee7767eeee1167eeee1161eeeee11eeeeee11eeeeee77eeeeee17eeeeee11eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000
__gff__
0000000000000000000000000000000001000101010000000000000000000000000001000100000000000000000000000000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1213131313131313131313131313131400121313131313131313131313131313140012131313131313131313131313131314001213131313131313131313131313131400121313131313131313131313131313140012131313131313131313131313131314001213131313131313131313131313131400000000000000000000
2200000000000000000000000000002400220000001010101010101010101000240022000000000000000000000000000024002200000000000000000000000000002400220010101010101010101000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
2200000000000000000000000000002400220000001000000000000000001000240022000010101010100000000000000024002200000000101010101010000000002400220010000000000000001000000000240022000010101010101010100000000024002200000010101010101000000000002400000000000000000000
2200000000000000000000000000002400220000101000101010101010001000240022000010000000101000000000000024002200000000101616161010000000002400220010000000100010001000000000240022001010000010000000100000000024002200000010000000001010000000002400000000000000000000
2223232323232323232323232323232400221010100000101010000010001000240022101010001007001010101010100024002200000000100600100010000000002400220010000000060010001000000000240022101000000000000900100000000024002200101010001910000010000000002400000000000000000000
2200000000000000000000000000002400221000000700000700000717171000240022100000001000000000171717100024002200000000100006000010000000002400220010000010100610001000000000240022100119190010090010100000000024002200100000190919100010000000002400000000000000000000
2200150000000000000000000000002400221010100000101000000010101000240022100000000700071000101010100024002200000000100000060010000000002400220010101010000006001000000000240022100119001000090000101010100024002200100019090909000010000000002400000000000000000000
2200000000000000000000000000002400221010101010101000000000171000240022101010101010000000100000000024002200000000101010000010000000002400220000000010000000100000000000240022100119101000001000000000100024002200101010001000001010000000002400000000000000000000
2200050000000000000000000000002400220000000000001010101010101000240022000000000010101010100000000024002200000000000010000010000000002400220000000010101000100000000000240022101010101000000000000900100024002200000010000000101000000000002400000000000000000000
2200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000010101010000000002400220000000000100016001000000000240022000000001000001010101010100024002200000010101010100000000000002400000000000000000000
2200040000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400220000000000100016161000000000240022000000001010101000000000000024002200000000000000000000000000002400000000000000000000
3233333333333333333333333333333400323333333333333333333333333333340032333333333333333333333333333334003233333333333333333333333333333400323333333333333333333333333333340032333333333333333333333333333334003233333333333333333333333333333400000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1213131313131313131313131313131400121313131313131313131313131313140012131313131313131313131313131314001213131313131313131313131313131400121313131313131313131313131313140012131313131313131313131313131314001213131313131313131313131313131400000000000000000000
2200000000001010101010000000002400220000000000000000000000000000240022000000000010000000000000000024002200000000001000000000000000002400220000000000100010000000000000240022000000000010000010100000000024002202000000000000000000000000002400000000000000000000
22000000000010000000100000000024002200000800000000000000000000002400220a000000001000000000000000002400220a000000001000000000000000002400220b000000001000000000000000002400220c0000000010000000000000000024002200000000000000000000000000002400000000000000000000
22000000101010000800100000000024002200000000000000000000000000002400221a000000001000000000000000002400221a000000001000000000000000002400221b000000001000000000000000002400221c0000000010000000000000000024002200000000000000000000000000002400000000000000000000
2200000010000000080010000000002400220000180000000000000000000000240022000000000010000000000000000024002200000000001000000000000000002400220000000000100000000000000000240022000000000010000000000000000024002200000000000000000000000000002400000000000000000000
2200000010000000080010000000002400220000000000000000000000000000240022000000000010000000000000000024002200000000001000000000000000002400220000000000100000000000000000240022000000000010000000000000000024002200000000000000000000000000002400000000000000000000
2200000010101000181010000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000008800000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
2200000000001000181000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
2200000000001000181000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
2200000000001010101000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
2200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400220000000000000000000000000000240022000000000000000000000000000024002200000000000000000000000000002400000000000000000000
3233333333333333333333333333333400323333333333333333333333333333340032333333333333333333333333333334003233333333333333333333333333333400323333333333333333333333333333340032333333333333333333333333333334003233333333333333333333333333333400000000000000000000
__sfx__
901e002027745277152771527715277152772527725277153071530745307353071530745307452c7352c7252c7152c7352c7352c7252c7352c7252c7352c7452c7252c7352c7452c7452c7452c7452c72500000
901e00202772527745277152771527715277152772527725277153071530745307353071530745307452c7352c7252c7152c735297352972529735297252973529745297252b7352c7452c7452c7452b7452b725
001e00200c0433f205246150c0053f10500005246150c0050c0053f300246150c0050c00500005246150c0430c0433f500246150c0050c00500005246150c0050c0003f500246150c0050c00500005246150c005
001e00200c0433f205246150c0053f10500005246150c0050c0053f300246150c0050c00500005246150c0050c0433f500246150c0050c00500005246150c0430c0433f41524615256152a6152c6153061532615
001e00000c0003f200246150c0003f11500000246150c0000c0003f300246150c0000c0000c615246150c0000c0003f515246150c0000c00000000246150c0000c0003f415246150c61518615246152461530615
301e00000313500105031050313503105031050313503105031350310503105031350310503105031350310500135031050010500135001050010500135001050013500105001050013500105001050013500105
001e00000313500105031050313503105031050313503105031350310503105031350310503105031350310500135031050010500135001050013500105001050013500135001050013500105001050013500105
641e002027012270122701227012270122b01233012330123301230012300122e0122e0122b0122b012290122e0122e0022e0122e0022e0122701226012180121d012220122e0122b0122b012290122901229012
641e00002b0122b0122b0122b0122e0122701227012270122701230012300122e0122e0122b012290122701224012220121f0121d0121b0121b012180121f0121f0121f0121f0121f0121f0121f0122401224012
001000002400024000240002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011400200005200052000520005200052000520005200052000520005200052000520005200052000520005200052000520005200052000520005200052000520005200052000520005200052000520005200000
011400000305203052030520305203052030520305203052030520305203052030520305203052030520305203052030520305203052030520305203052030520305203052030520305203052030520305203052
c514002002000020002e0122c0122c0122a2122a21227200272122c3002c3002a3002c4002a400274002c400273122c3122c3122a3122c4122a412274122c4002a4002740002000020002c4122a4122741200000
cd1400202c3002a3122a3002a3102c2112c3102c3122a300273002e3122c3002e3122c3002a300273002c300272002c2002c2002a2102c2112a210273122c3002a30027300023002730032000320003200031000
911400200c0330c0000c0030c0050c0430c0000c0000c0050c0430c0000c0000c0050c0330c0000c000246000c0330c0000c0000c0050c0530c0000c0000c0050c0333f2050c0000c0050c033000050c6230c005
771400201b60500605006053f6153f615006051b605006051b60500605371003b1003b100006051b605006051b60000605371153b1151b605006051b605006051b6001b6001b6001b600006051b6141b6141b614
791400203201232012320153201232012320153301133012330123301233012330123301531000310003100031000320003100031000310003200032000320003201531011310153201531011310123101231015
791400203201232012320153201232015330113301233012330123301233012330123300031000310003100031012310123101532011310153201131012310123200031000310003201531011310123101231015
4b14002032000320003200032000320003200033000330003300033000330000f0451102513055150451600531004150451704519034246242462424624246242460031000310003200031000310003100031000
011400200c0003f20524615246003f10500005246150c0050c0053f30024615246000c00500005246150c0000c0003f500246150c0050c00524600246150c0050c0003f500246150c0050c00500005246150c005
910c00200c0530c0000c0030c0050c0530c0000c0000c0050c0530c0000c0000c0050c0530c0000c000246000c0530c0000c0000c0050c0530c0000c0000c0050c0533f2050c0000c0050c053000050c6000c005
490c00200c0050c0050c0050c0050c6450c0050c0050c0050c0050c0050c0050c0050c6450c0050c005246050c0050c0050c0050c0050c6050c0050c0050c0050c6450c6050c6050c6450c6050c6050c6450c645
490c00200c0050c0050c0050c0050c6450c0050c0050c0050c0050c0050c0050c0050c6450c0050c005246050c0050c0050c0050c0050c6450c0050c0050c0050c0053f2050c0050c0050c645000050c6450c005
9f0c0020131250e1250e1250e1250e1250e1250e1250e125131250e1250e1250e1250e1250e1250e1250e125131250e1250e1250e1250e1250e1250e1250e125131250e1250e1250e1250e1250e1250e1250e125
9f0c00201012513125131251312513125131251312513125101251312513125131251312513125131251312510125131251312513125131251312513125131251012513125131251312513125131251312513125
010c00200005500055000550005500055000550005500055000550005500055000550005500055000550005500055000550005500055000550005500055000550005500055000550005500055000550005500055
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6b050000191101e110241302c15012600116003305036040380303b020000001260014600176001b600206002a600396001310013100191001e100241002c1000000000000000000000000000000000000000000
003300003005000000000000000033556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0500003c64038640366502f6502c6500965008650086500a6500d650106501265014650176501b650206502a650396500000000000000000000000000000000000000000000000000000000000000000000000
490100001b51006540065401953018530005000050000500045000350002500015000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
71100000290551e0001e0000000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005
711000001d0551e0001e0000000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005
000100000e0500f050100501105014050170501b0501e0502205024050170500a050010501c0001c0001d00000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100000000022905227052290522c0522c0520000200002000020000200002000020000200002010020000200002000020000200002000020000200002000020000200002000020000200002000020000200002
1b0100002702627026270262702624026200261b02614026140261402617026190261d0262102623026280262d026000060000600006000060000600006000060000600006000060000600006000060000600006
900100000e0100d0400c0400b03009030070100601003010020100101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000211102114015140271300f6300f6101c610196001761016600156100f6000c61009600076000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001b61006540065401963018630116100e6100c610096100861000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001f5302b5302e5302e5303250032500395002751027510285102a510005000050000500275102951029510005000050000500005002451024510245102751029510005000050000500005000050000500
0001000024030240301c0301c0302a2302823025210212101e2101b2101b21016210112100d2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100a2100020000200
0001000024030240301c0301c03039010390103a0103001030010300102d010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000210302703025040230301a030190100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000d740137400d7200c40031200312000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 00054643
00 01064844
00 00054643
00 01064844
00 00050702
00 01060802
00 00050702
00 01060803
02 41064145
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424145
00 41424344
01 0a0e534f
00 0b0e530f
00 0a0e0c45
00 0b0e0d52
00 0a0e1012
02 0b0e1152
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
01 14161957
00 14151957
00 14161917
00 14161917
00 14161918
00 14151918
00 14161917
00 14161917
00 14161918
00 14161918
00 54551918
02 54161918
00 41424344
00 41424145
00 41424145
00 41424145
00 41424344
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145
00 41424145

